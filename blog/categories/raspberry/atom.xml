<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Raspberry | Rabarar\'s Blog]]></title>
  <link href="http://rabarar.github.io/blog/categories/raspberry/atom.xml" rel="self"/>
  <link href="http://rabarar.github.io/"/>
  <updated>2015-09-22T14:30:41-04:00</updated>
  <id>http://rabarar.github.io/</id>
  <author>
    <name><![CDATA[Rob Baruch]]></name>
    <email><![CDATA[rabarar@yahoo.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[DarkIce and IceCast]]></title>
    <link href="http://rabarar.github.io/blog/2015/07/02/darkice-and-icecast/"/>
    <updated>2015-07-02T17:49:49-04:00</updated>
    <id>http://rabarar.github.io/blog/2015/07/02/darkice-and-icecast</id>
    <content type="html"><![CDATA[<p><strong>So</strong> you want to <em>livestream audio</em> from your Pi to the web? Take a look at these two packages: Darkice, and IceCast. Darkice lets you select a sound input to encode and stream to an IceCast server. The server will wrap the audio stream with a nice web-appropriate display to make selecting and playing content easily.</p>

<hr />

<h2>DarkIce: Audio Encoding software</h2>

<p>First, take a look at this <a href="https://stmllr.net/blog/live-mp3-streaming-from-audio-in-with-darkice-and-icecast2-on-raspberry-pi/">link</a> describing how to compile DarkIce with mp3 support which is likely what you&rsquo;re going to want.</p>

<p>Here&rsquo;s the config file to setup DarkIce on</p>

<pre><code># see the darkice.cfg man page for details

# this section describes general aspects of the live streaming session
[general]
duration      = 0                # duration of encoding, in seconds. 0 means forever
bufferSecs    = 5                # size of internal slip buffer, in seconds
reconnect     = yes              # reconnect to the server(s) if disconnected

# this section describes the audio input that will be streamed
[input]
device        = hw:1,0           # Alsa soundcard device for the audio input
sampleRate    = 44100            # sample rate in Hz. try 11025, 22050 or 44100
bitsPerSample = 16               # bits per sample. try 16
channel       = 1                # channels. 1 = mono, 2 = stereo

# this section describes a streaming connection to an IceCast2 server
# there may be up to 8 of these sections, named [icecast2-0] ... [icecast2-7]
# these can be mixed with [icecast-x] and [shoutcast-x] sections
[icecast2-0]
bitrateMode   = vbr              # variable bit rate
format        = mp3              # format of the stream: mp3
quality       = 0.6              # quality of the stream sent to the server
server        = localhost        # host name of the server
port          = 8000             # port of the IceCast2 server, usually 8000
password      = SOURCE_PASSWORD  # source password to the IceCast2 server
mountPoint    = raspi         # mount point of this stream on the IceCast2 server
name          = RasPi            # name of the stream
description   = DarkIce on RasPi # description of the stream
url           = http://localhost # URL related to the stream
genre         = my genre         # genre of the stream
public        = no               # advertise this stream?
localDumpFile = recording.mp3    # Record also to a file
</code></pre>

<p>The key element here is the [input] section. Here we specify the Alsa device from which to source audio for capturing and encoding.</p>

<p>The other element in the config file that you need to configure is the [icecast-2]. Set the address (server and port) as well as the password to the icecast-2 server. Note that the default configuration for the icecast-2 server is only two (2) streams. Be sure to increase that if you&rsquo;re attempting to stream more than that to the server.</p>

<p>If you want to encode more than one stream on your Pi, you can run multiple instances of DarkIce and use the <strong>-c</strong> flag to specify a unique configuration file for each instance.</p>

<p>To configure <a href="http://www.icecast.org">Icecast</a>, start here. The <a href="http://www.icecast.org/docs/">Docs</a> are also a good starting point too. For the impatient you can just use apt-get.</p>

<pre><code>apt-get install icecast
</code></pre>
]]></content>
  </entry>
  
</feed>
